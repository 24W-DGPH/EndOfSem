shiny::runApp()
install.packages("pacman")
runApp()
colnames(who_data_clean)
str(who_data_clean)
runApp()
cor(who_data_clean$hiv_prevalence, who_data_clean$malnutrition_prevalence)
cor.test(who_data_clean$hiv_prevalence, who_data_clean$malnutrition_prevalence)
cor <- cor.test(who_data_clean$hiv_prevalence, who_data_clean$malnutrition_prevalence)
View(cor)
cor$statistic
cor$estimate
runApp()
cor.test(who_data_clean$hiv_prevalence, who_data_clean$malnutrition_prevalence)$estimate
cor.test(who_data_clean$health_exp, who_data_clean$life_expect)
cor.test(us$health_exp, us$life_expect)
?cor.test
cor.test(us$health_exp, us$life_expect, method = "spearman")
us <- who_data_clean %>% filter(country == "Ghana")
cor.test(us$health_exp, us$life_expect)
cor.test(us$health_exp, us$life_expect, method = "spearman")
us <- who_data_clean %>% filter(country == "Germany")
cor.test(us$health_exp, us$life_expect)
cor.test(us$health_exp, us$life_expect, method = "spearman")
max(who_data_clean$health_exp)
max(who_data_clean$health_exp, na.rm = T)
who_data_clean[max(who_data_clean$health_exp, na.rm = T)]
who_data_clean %>%  group_by(year) %>%
summarise(max = max(who_data_clean$health_exp, na.rm = T))
us %>%  group_by(year) %>%
summarise(max = max(who_data_clean$health_exp, na.rm = T))
table <- tibble(
cor_hiv_mal = cor.test(who_data_clean$hiv_prevalence, who_data_clean$malnutrition_prevalence)$estimate,
cor_heal_life = cor.test(who_data_clean$health_exp, who_data_clean$life_expect)$estimate,
)
View(table)
runApp()
runApp()
runApp()
view(who_data_clean$neonatal_mortality)
View(iso_reference)
View(iso_reference)
view(who_data_clean$neonatal_mortality, na.rm  = T)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
library(plotly)
view(who_data_clean$neonatal_mortality, na.rm  = T)
view(who_data_clean$neonatal_mortality)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?labs
runApp()
runApp()
runApp()
runApp()
View(who_data_clean)
colnames(who_data_clean)
runApp()
runApp()
?cor.test
runApp()
runApp()
runApp()
# Renaming columns
who_data_clean <- who_data_clean %>%
rename(
hiv_prevalence = prev_hiv,
tb_incidence = inci_tuberc,
malnutrition_prevalence = prev_undernourishment
)
# View column names
colnames(who_data_clean)
runApp()
source("C:/Users/jasme/Desktop/EndOfSem/WHO_data.R")
runApp()
runApp()
runApp()
colnames(who_data_clean)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?geom_line
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?labs
runApp()
?scale_x_date()
runApp()
View(who_data_clean)
runApp()
runApp()
# Convert year to a date time variable
who_data$year <- as.Date(who_data$year)
who_data_clean$year <- as.Date(who_data_clean$year)
# Examine structure of the data
str(who_data)
who_data_clean$year <- as_date(who_data_clean$year)
runApp()
View(who_data_clean)
runApp()
?year
runApp()
runApp()
runApp()
runApp()
runApp()
min(who_data_clean$year)
max(who_data_clean$year)
runApp()
runApp()
runApp()
runApp()
runApp()
?abline
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
renv::status()
library(renv)
shiny::runApp()
library(renv)
shiny::runApp()
runApp()
